/**
  @page TIM_Encoder_Mode TIM Encoder mode Description
  
  @verbatim
  ******************** (C) COPYRIGHT 2014 STMicroelectronics *******************
  * @file    TIM/TIM_EncoderMode/readme.txt 
  * @author  MCD Application Team
  * @version V1.6.0
  * @date    13-October-2021
  * @brief   TIM Encoder Mode Description.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2014 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
   @endverbatim

@par Example Description 

This example shows how to configure the TIM peripheral to interface with a encoder sensor.
The TIM3 is configured in encoder mode1: Counter counts up/down on TI2 rising edge 
depending on TI1 level 

The TIM3 Autoreload value is set to 399, so the encoder round is 400 TIM counter clock. 
An update interrupt is generated each time the TIM counter reach the Autoreload value, 
in this example 400 TIM counter clock.
 

@par Directory contents 

  - TIM/TIM_EncoderMode/stm32f0xx_conf.h    Library Configuration file
  - TIM/TIM_EncoderMode/stm32f0xx_it.c      Interrupt handlers
  - TIM/TIM_EncoderMode/stm32f0xx_it.h      Interrupt handlers header file
  - TIM/TIM_EncoderMode/main.c              Main program
  - TIM/TIM_EncoderMode/main.h              Header for main.c module
  - TIM/TIM_EncoderMode/system_stm32f0xx.c  STM32F0xx system source file
  
@note The "system_stm32f0xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to meet user application requirements. 
      To select different clock setup, use the "STM32F0xx_Clock_Configuration_VX.Y.Z.xls" 
      provided with the AN4055 package available on <a href="http://www.st.com/internet/mcu/class/1734.jsp">  ST Microcontrollers </a>
         
@par Hardware and Software environment

  - This example runs on STM32F0xx devices.
  
  - This example has been tested with STMicroelectronics STM320518-EVAL and
    STM32072B-EVAL including respectively STM32F051R8T6 and STM32F072VBT6 devices
    and can be easily tailored to any other supported device and development board

@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F0xx_StdPeriph_Templates
 - Open your preferred toolchain 
 - Select the appropriate workspace 
 - Rebuild all files and load your image into target memory
 - Run the example

 */
