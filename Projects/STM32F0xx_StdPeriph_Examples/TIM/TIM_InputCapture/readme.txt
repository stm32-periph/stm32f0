/**
  @page TIM_Input_Capture TIM Input Capture example
  
  @verbatim
  ******************** (C) COPYRIGHT 2014 STMicroelectronics *******************
  * @file    TIM/TIM_InputCapture/readme.txt 
  * @author  MCD Application Team
  * @version V1.6.0
  * @date    13-October-2021
  * @brief   Description of the TIM Input Capture example.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2014 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
   @endverbatim

@par Example Description 

This example shows how to use the TIM peripheral to measure the frequency of an 
external signal.

The TIM1 clock frequency is set to SystemCoreClock (Hz), the Prescaler is 0 so the 
TIM1 counter clock is SystemCoreClock (Hz).

SystemCoreClock is set to 48 MHz.

TIM1 is configured in Input Capture Mode: the external signal is connected to 
TIM1 Channel2 used as input pin.
To measure the frequency we use the TIM1 CC2 interrupt request,
so In the TIM1_CC_IRQHandler routine, the frequency of the external signal is computed. 
The "TIM1Freq" variable contains the external signal frequency:
TIM1Freq = TIM1 counter clock / Capture in Hz,
where the Capture is the difference between two consecutive TIM1 captures. 

The minimum frequency value to measure is 1100 Hz.
 

@par Directory contents 

  - TIM/TIM_InputCapture/stm32f0xx_conf.h    Library Configuration file
  - TIM/TIM_InputCapture/stm32f0xx_it.c      Interrupt handlers
  - TIM/TIM_InputCapture/stm32f0xx_it.h      Interrupt handlers header file
  - TIM/TIM_InputCapture/main.c              Main program
  - TIM/TIM_InputCapture/main.h              Header for main.c module
  - TIM/TIM_InputCapture/system_stm32f0xx.c  STM32F0xx system source file
  
@note The "system_stm32f0xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to meet user application requirements. 
      To select different clock setup, use the "STM32F0xx_Clock_Configuration_VX.Y.Z.xls" 
      provided with the AN4055 package available on <a href="http://www.st.com/internet/mcu/class/1734.jsp">  ST Microcontrollers </a>
         
@par Hardware and Software environment

  - This example runs on STM32F0xx devices.
  
  - This example has been tested with STMicroelectronics STM320518-EVAL and
    STM32072B-EVAL including respectively STM32F051R8T6 and STM32F072VBT6 devices
    and can be easily tailored to any other supported device and development board

  - STM320518-EVAL Set-up
    - Connect the external signal to measure to the TIM1 CH2 pin (PA.09).
    
  - STM32072B-EVAL Set-up
    - Connect the external signal to measure to the TIM1 CH2 pin (PA.09).

@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F0xx_StdPeriph_Templates
 - Open your preferred toolchain 
 - Select the appropriate workspace 
 - Rebuild all files and load your image into target memory
 - Run the example

 */
